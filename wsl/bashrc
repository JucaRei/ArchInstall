# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

echo "Hello $USER."
echo "Today is $(date +'%a %e %b : %G : %T %p')"
echo "Current working directory : $(pwd)"

# Raspberry
alias dietpi="ssh dietpi@192.168.1.200"
alias dietroot="ssh root@192.168.1.200"

# Echo Path 
alias ep="echo ${PATH} | sed -e $'s/:/\\\n/g'"

alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
# alias to show the date
alias da='date "+%Y-%m-%d %A %T %Z"'
alias mount="mount |column -t"

########################################################
######### Podman rootless for Docker Compose ###########
########################################################

# export DOCKER_HOST="unix://$XDG_RUNTIME_DIR/podman/podman.sock"
# alias pds='podman container ps'
# alias pdsa='podman container ps -a'
# alias podkill='podman kill $(podman ps -q)'
# alias podstop='podman stop $(podman ps -a -q)'
# alias podstart='podman start $(podman ps -a -q)'
# alias podrm='podman rm -v $(podman ps -aq)'
# alias podrmi='podman rmi $(podman images -f "dangling=true" -q)'
# alias podrmv='podman volume rm $(podman volume ls -f dangling=true -q)'
# alias podclean='podrm; podrmv; podrmi'
# alias podtail='podman logs -f $(podman ps -lq)'

# Tor browser
# alias tor='sudo podman run -it --rm -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v /dev/snd:/dev/snd --privileged --name tor-browser jess/tor-browser'
# alias tor='sudo podman run -it --rm -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v /dev/snd:/dev/snd --privileged -p 5800:5800 --name tor-browser domistyle/tor-browser'

########################################################
####################### Utils ##########################
########################################################

alias du="ncdu --color dark -r -x --exclude .git --exclude .svn --exclude .asdf --exclude node_modules --exclude .npm --exclude .nuget --exclude Library"
alias findbrokenlinks="alias findbrokenlinks='find . -type l | (while read FN ; do test -e "$FN" || ls -ld "$FN"; done)'"

# Make playlist for mpv
alias playlistmaker="find ./ -type f | sort > playlist.m3u"

#Others
alias tarnowsu='sudo tar -azcvf --exclude={dev/pts,home,lost+found,media,mnt,mnt2,proc,run,sys,tmp,var/lib/lxcfs,var/lib/lxd/unix.socket}'
alias tarnow='tar -azcvf'
alias EXCLUDE="--exclude=proc --exclude=sys --exclude=dev/pts --exclude=/var/backups"
alias untar='tar -zxvf'
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias cat='batcat --pager=never --theme=ansi'
alias catf='batcat --theme=ansi'

#fixes
alias fix-permissions="sudo chown -R $USER:$USER ~/.config ~/.local"

#systeminfo
alias probe="sudo -E hw-probe -all -upload"

#systeminfo (Systemd)
alias probe="sudo -E hw-probe -all -upload"
alias sysfailed="systemctl list-units --failed"

# Search command line history
alias h="history | grep "

#know what you do in these files
alias nhosts="sudo vi /etc/hosts"
alias nb="vi ~/.bashrc"
alias nz="vi ~/.zshrc"
alias nf="vi ~/.config/fish/config.fish"
alias ba="source ~/.bashrc"

# Alias's to show disk space and space used in a folder
alias diskspace="du -S | sort -n -r |more"
alias folders='du -h --max-depth=1'
alias folderssort='find . -maxdepth 1 -type d -print0 | xargs -0 du -sk | sort -rn'
alias tree='tree -CAhF --dirsfirst'
alias treed='tree -CAFd'
alias mountedinfo='df -hT'

# Create and go to the directory
mkdirg() {
  mkdir -p $1
  cd $1
}

#skim
alias sk="sk --ansi -c 'grep -rI --color=always --line-number "{}" .'"

#give the list of all installed desktops - xsessions desktops
alias xd="ls /usr/share/xsessions"

#check vulnerabilities microcode
alias microcode='grep . /sys/devices/system/cpu/vulnerabilities/*'

#hardware info --short
alias hw="hwinfo --short"

#add new fonts
alias update-fc='sudo fc-cache -fv'

# Play video files in current dir by type
alias playavi='mpv *.avi'
alias playmov='mpv *.mov'
alias playmp4='mpv *.mp4'
alias playmkv='mpv *.mkv'

# yt-dlp
# alias yta-aac="yt-dlp --extract-audio --audio-format aac "
alias yta-best="yt-dlp --extract-audio --audio-format best --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-flac="yt-dlp --extract-audio --audio-format flac --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-m4a="yt-dlp --extract-audio --audio-format m4a --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-mp3="yt-dlp --extract-audio --audio-format mp3 --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-opus="yt-dlp --extract-audio --audio-format opus --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-vorbis="yt-dlp --extract-audio --audio-format vorbis --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-wav="yt-dlp --extract-audio --audio-format wav --output '%(title)s.%(ext)s' --no-keep-video "
alias ytv-best="yt-dlp -f bestvideo+bestaudio --output '%(title)s.%(ext)s' --no-keep-video "
alias ytv-best-mp4="yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' --merge-output-format mp4 --no-keep-video --embed-chapters --output '%(title)s.%(ext)s' "
alias yt-plMed="yt-dlp -f 'bestvideo[height<=720][ext=mp4]+bestaudio/best[height<=720][ext=m4a]' --merge-output-format mp4 --no-keep-video --embed-chapters --output '%(title)s.%(ext)s' "
alias yt-plHigh="yt-dlp -f 'bestvideo[height<=1080][ext=mp4]+bestaudio/best[height<=1080][ext=m4a]' --merge-output-format mp4 --no-keep-video --embed-chapters --output '%(title)s.%(ext)s' "

# switch between shells
# I do not recommend switching default SHELL from bash.
alias tobash="sudo chsh $USER -s /bin/bash && echo 'Now log out.'"
alias tozsh="sudo chsh $USER -s /bin/zsh && echo 'Now log out.'"
alias tofish="sudo chsh $USER -s /bin/fish && echo 'Now log out.'"

#free
alias free="free -mt"

#continue download
alias wget="wget -c"

#userlist
alias userlist="cut -d: -f1 /etc/passwd"

#search content with ripgrep
alias rg="rg --sort path"

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# export PATH=$PATH:/usr/sbin
# Add sbin directories to PATH.  This is useful on systems that have sudo
echo $PATH | grep -Eq "(^|:)/sbin(:|)" || PATH=$PATH:/sbin
echo $PATH | grep -Eq "(^|:)/usr/sbin(:|)" || PATH=$PATH:/usr/sbin

if [ -d "$HOME/.bin" ]; then
  PATH="$HOME/.bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ]; then
  PATH="$HOME/.local/bin:$PATH"
fi

if [ -d "$HOME/.local/share/applications" ]; then
  PATH="$HOME/.local/share/applications:$PATH"
fi

# export EDITOR='nvim'
# export VISUAL='nvim'
export HISTCONTROL=ignoreboth:erasedups
#export PAGER='most'
export PAGER='batcat'
### "bat" as manpager
export MANPAGER="sh -c 'col -bx | batcat -l man -p'"
# Ignore case on auto-completion
# Note: bind used instead of sticking these in .inputrc
# if [[ $iatest > 0 ]]; then bind "set completion-ignore-case on"; fi
# Disable the bell
if [[ $iatest > 0 ]]; then bind "set bell-style visible"; fi
# Show auto-completion list automatically, without double tab
if [[ $iatest > 0 ]]; then bind 'set show-all-if-ambiguous on'; fi
bind 'TAB:menu-complete'


# To see if a command is aliased, a file, or a built-in command
alias checkcommand="type -t"

alias chmod='chmod -c --preserve-root'
alias chown='chown -c --preserve-root'
alias flushmem="sudo sync; echo 3 > /proc/sys/vm/drop_caches"

# Show open ports
alias openports='netstat -nape --inet'

# Alias's for archives
alias mktar='tar -cvf'
alias mkbz2='tar -cvjf'
alias mkgz='tar -cvzf'
alias untar='tar -xvf'
alias unbz2='tar -xvjf'
alias ungz='tar -xvzf'

# Show all logs in /var/log
alias logs="sudo find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -v '[0-9]$' | xargs tail -f"

# alias chmod commands
alias mx='chmod a+x'
alias 000='chmod -R 000'
alias 644='chmod -R 644'
alias 666='chmod -R 666'
alias 755='chmod -R 755'
alias 777='chmod -R 777'

# Changing "ls" to "exa"
alias ls='exa -lha --color=always --group-directories-first' # my preferred listing
alias la='exa -a --color=always --group-directories-first'  # all files and dirs
alias ll='exa -l --color=always --group-directories-first'  # long format
alias lt='exa -aT --color=always --group-directories-first' # tree listing
alias lz='exa -lSrh --color=always --group-directories-first' # sort by size
alias l.='exa -a | egrep "^\."'

alias internetPCI="sudo lshw -class network -short"
alias sxorg="export DISPLAY=:0.0"

# Colorize grep output (good for log files)
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# confirm before overwriting something
alias cp="cp -i"
alias mv='mv -i'
alias rm='rm -iv'
alias mkdir='mkdir -pv'
alias cpa='advcp -g -i -v --update --recursive'
alias mva='advmv -g -i -v'
#cp without confirm overwrint something
alias cpay='yes | advcp -g -i -v --update --recursive'
alias mvay='yes | advmv -g -i -v'
alias cpy="yes | cp -rf"
alias mvy="yes | mv -rf"
alias rmy="yes | rm -rf"

#keyboard
alias give-me-abnt-br="sudo localectl set-x11-keymap br"
alias give-me-qwerty-us="sudo localectl set-x11-keymap us"
alias df='df -Th'    # human-readable sizes

# ps
alias psa="ps auxf"
alias psgrep="ps aux | grep -v grep | grep -i -e VSZ -e"
alias psmem='ps auxf | sort -nr -k 4'
alias pscpu='ps auxf | sort -nr -k 3'

# get error messages from journalctl
alias jctl="journalctl -p 3 -xb"

# Merge Xresources
alias merge='xrdb -merge ~/.Xresources'

# Arp get all devices on lan
alias localdevicesET="sudo arp-scan --interface=eth0 --localnet"
alias localdevicesWI="sudo arp-scan --interface=wlan0 --localnet"

## get top 10 shell commands:
alias top10='print -l ${(o)history%% *} | uniq -c | sort -nr | head -n 10'
alias comused="history | awk '{print $2}' | sort | uniq -c | sort -nr | head -5"

# Count all files (recursively) in the current folder
alias countfiles="for t in files links directories; do echo \`find . -type \${t:0:1} | wc -l\` \$t; done 2> /dev/null"

## Use a default width of 80 for manpages for more convenient reading
export MANWIDTH=${MANWIDTH:-80}

# avoid super long lines when reading man pages by limiting the line length to 120, but using less if the terminal width is smaller
alias man='MANWIDTH=$((COLUMNS > 120 ? 120 : COLUMNS)) man -P "less $LESS"'

# Default parameter to send to the "less" command
# -R: show ANSI colors correctly; -i: case insensitive search
LESS="-R -i"

## Settings for umask
if ((EUID == 0)); then
  umask 002
else
  umask 022
fi

alias top='htop'
alias cat='batcat --pager=never --theme=ansi'
alias catf='batcat --theme=ansi'

### SHOPT
shopt -s autocd  # change to named directory
shopt -s cdspell # autocorrects cd misspellings
shopt -s cmdhist # save multi-line commands in history as single line
shopt -s dotglob
shopt -s histappend     # do not overwrite history
shopt -s expand_aliases # expand aliases
shopt -s checkwinsize   # checks term size when bash regains control

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

### CHANGE TITLE OF TERMINALS
case ${TERM} in
xterm* | rxvt* | Eterm* | aterm | kitty | tilix | kterm | gnome* | alacritty | st | konsole*)
  PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\007"'
  ;;
screen*)
  PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\033\\"'
  ;;
esac

PROMPT_COMMAND='history -a'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
  . /etc/bash_completion
fi

# enable bash completion in interactive shells
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${void_chroot:+($void_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${void_chroot:+($void_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${void_chroot:+($void_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

### ARCHIVE EXTRACTION
# usage: ex <file>
ex() {
  if [ -f "$1" ]; then
    case $1 in
    *.tar.bz2) tar xjf $1 ;;
    *.tar.gz) tar xzf $1 ;;
    *.bz2) bunzip2 $1 ;;
    *.rar) unrar x $1 ;;
    *.gz) gunzip $1 ;;
    *.tar) tar xf $1 ;;
    *.tbz2) tar xjf $1 ;;
    *.tgz) tar xzf $1 ;;
    *.zip) unzip $1 ;;
    *.Z) uncompress $1 ;;
    *.7z) 7z x $1 ;;
    *.deb) ar x $1 ;;
    *.tar.xz) tar xf $1 ;;
    *.tar.zst) unzstd $1 ;;
    *) echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

pwdtail ()
{
	pwd|awk -F/ '{nlast = NF -1;print $nlast"/"$NF}'
}

# Show the current distribution
distribution ()
{
	local dtype
	# Assume unknown
	dtype="unknown"
	
	# First test against Fedora / RHEL / CentOS / generic Redhat derivative
	if [ -r /etc/rc.d/init.d/functions ]; then
		source /etc/rc.d/init.d/functions
		[ zz`type -t passed 2>/dev/null` == "zzfunction" ] && dtype="redhat"
	
	# Then test against SUSE (must be after Redhat,
	# I've seen rc.status on Ubuntu I think? TODO: Recheck that)
	elif [ -r /etc/rc.status ]; then
		source /etc/rc.status
		[ zz`type -t rc_reset 2>/dev/null` == "zzfunction" ] && dtype="suse"
	
	# Then test against void, Ubuntu and friends
	elif [ -r /lib/lsb/init-functions ]; then
		source /lib/lsb/init-functions
		[ zz`type -t log_begin_msg 2>/dev/null` == "zzfunction" ] && dtype="void"
	
	# Then test against Gentoo
	elif [ -r /etc/init.d/functions.sh ]; then
		source /etc/init.d/functions.sh
		[ zz`type -t ebegin 2>/dev/null` == "zzfunction" ] && dtype="gentoo"
	
	# For Mandriva we currently just test if /etc/mandriva-release exists
	# and isn't empty (TODO: Find a better way :)
	elif [ -s /etc/mandriva-release ]; then
		dtype="mandriva"

	# For Slackware we currently just test if /etc/slackware-version exists
	elif [ -s /etc/slackware-version ]; then
		dtype="slackware"

	fi
	echo $dtype
}

# Searches for text in all files in the current folder
ftext ()
{
	# -i case-insensitive
	# -I ignore binary files
	# -H causes filename to be printed
	# -r recursive search
	# -n causes line number to be printed
	# optional: -F treat search term as a literal, not a regular expression
	# optional: -l only print filenames and not the matching lines ex. grep -irl "$1" *
	grep -iIHrn --color=always "$1" . | less -r
}

# colorscript random

 # Nix
 if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
    . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
 fi
 # End Nix

### SETTING THE STARSHIP PROMPT ###
# eval "$(starship init bash)"
