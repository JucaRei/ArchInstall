#!/bin/bash
# .bashrc

# ┌───────┐
# │.bashrc│
# └───────┘
echo "Hello $USER."
echo "Today is $(date +'%a %e %b : %G : %T %p')"
echo "Current working directory : $(pwd)"

# alias 192='ip route get 1 | grep -o "src [^ ]*" | cut -d ' ' -f 2'

#NFS
alias volume2="doas mount -t nfs 192.168.1.207:/mnt/HD/HD_a2 /home/$USER/Videos/Volume2 -o nolock"
alias volume1="doas mount -t nfs 192.168.1.207:/mnt/HD/HD_b2 /home/$USER/Videos/Volume1 -o nolock"
alias sharecenter="volume1 && volume2"

# Raspberry
alias dietpi="ssh dietpi@192.168.1.200"
alias dietroot="ssh root@192.168.1.200"

# Echo Path 
alias ep="echo ${PATH} | sed -e $'s/:/\\\n/g'"

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# alias to show the date
alias da='date "+%Y-%m-%d %A %T %Z"'

alias mount="mount |column -t"
alias vi="nvim"
alias prettygit="git log --graph --abbrev-commit --no-notes --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"

########################################################
######### Podman rootless for Docker Compose ###########
########################################################

# export DOCKER_HOST="unix://$XDG_RUNTIME_DIR/podman/podman.sock"
# alias pds='podman container ps'
# alias pdsa='podman container ps -a'
# alias podkill='podman kill $(podman ps -q)'
# alias podstop='podman stop $(podman ps -a -q)'
# alias podstart='podman start $(podman ps -a -q)'
# alias podrm='podman rm -v $(podman ps -aq)'
# alias podrmi='podman rmi $(podman images -f "dangling=true" -q)'
# alias podrmv='podman volume rm $(podman volume ls -f dangling=true -q)'
# alias podclean='podrm; podrmv; podrmi'
# alias podtail='podman logs -f $(podman ps -lq)'

# Tor browser
# alias tor='doas podman run -it --rm -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v /dev/snd:/dev/snd --privileged --name tor-browser jess/tor-browser'
# alias tor='doas podman run -it --rm -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v /dev/snd:/dev/snd --privileged -p 5800:5800 --name tor-browser domistyle/tor-browser'


########################################################
####################### Utils ##########################
########################################################

alias ping="prettyping --nolegend"
alias du="ncdu --color dark -r -x --exclude .git --exclude .svn --exclude .asdf --exclude node_modules --exclude .npm --exclude .nuget --exclude Library"
alias findbrokenlinks="alias findbrokenlinks='find . -type l | (while read FN ; do test -e "$FN" || ls -ld "$FN"; done)'"

# Make playlist for mpv
alias playlistmaker="find ./ -type f | sort > pl.m3u"

# BTRFS
alias btrfm="findmnt -t btrfs -o TARGET,SOURCE"
alias btrfsfs="sudo btrfs filesystem df /"
alias btrfsli="sudo btrfs su li / -t"

#VSCODE
# export PATH="$HOME/.config/Code:$PATH"
# export PATH="$HOME/.vscode/extensions:$PATH"
# export PATH="$HOME/usr/bin/code/:$PATH"
# export PATH="/opt/visual-studio-code/bin/code:$PATH"


# gpg encryption
# verify signature for isos
alias gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
# receive the key of a developer
alias gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"
alias fix-gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
alias fix-gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"
alias fix-keyserver="[ -d ~/.gnupg ] || mkdir ~/.gnupg ; cp /etc/pacman.d/gnupg/gpg.conf ~/.gnupg/ ; echo 'done'"

# Aliases for software managment
alias vpm='doas vpm'
alias update='doas vpm sync'
#Cleanup orphaned packages
alias cleanup='doas vpm cl && doas vpm ar'

#hblock (stop tracking with hblock)
#use unhblock to stop using hblock
alias unhblock="hblock -S none -D none"

#Others
alias tarnowsu='sudo tar -azcvf --exclude={dev/pts,home,lost+found,media,mnt,mnt2,proc,run,sys,tmp,var/lib/lxcfs,var/lib/lxd/unix.socket}'
alias tarnow='tar -azcvf'
alias EXCLUDE="--exclude=proc --exclude=sys --exclude=dev/pts --exclude=/var/backups"
alias untar='tar -zxvf'
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias cat='bat --pager=never --theme=ansi'
alias catf='bat --theme=ansi'

#clear
alias clean="clear; seq 1 $(tput cols) | sort -R | sparklines | lolcat"

#fixes
alias fix-permissions="sudo chown -R $USER:$USER ~/.config ~/.local"

#systeminfo
alias probe="sudo -E hw-probe -all -upload"
alias sysfailed="systemctl list-units --failed"


####################################################################################

#systeminfo (Systemd)
# alias probe="sudo -E hw-probe -all -upload"
# alias sysfailed="systemctl list-units --failed"

#grub update
alias update-grub="sudo grub-mkconfig -o /boot/grub/grub.cfg"

# Search command line history
alias h="history | grep "

#know what you do in these files
alias nlxdm="sudo $EDITOR /etc/lxdm/lxdm.conf"
alias nlightdm="sudo $EDITOR /etc/lightdm/lightdm.conf"
alias npacman="sudo $EDITOR /etc/pacman.conf"
alias ngrub="sudo $EDITOR /etc/default/grub"
alias nconfgrub="sudo $EDITOR /boot/grub/grub.cfg"
alias nmkinitcpio="sudo $EDITOR /etc/mkinitcpio.conf"
alias nmirrorlist="sudo $EDITOR /etc/pacman.d/mirrorlist"
alias nsddm="sudo $EDITOR /etc/sddm.conf"
alias nsddmk="sudo $EDITOR /etc/sddm.conf.d/kde_settings.conf"
alias nfstab="sudo $EDITOR /etc/fstab"
alias nnsswitch="sudo $EDITOR /etc/nsswitch.conf"
alias nsamba="sudo $EDITOR /etc/samba/smb.conf"
alias ngnupgconf="sudo $EDITOR /etc/pacman.d/gnupg/gpg.conf"
alias nhosts="sudo $EDITOR /etc/hosts"
alias nb="$EDITOR ~/.bashrc"
alias nz="$EDITOR ~/.zshrc"
alias nf="$EDITOR ~/.config/fish/config.fish"

# Alias's to show disk space and space used in a folder
alias diskspace="du -S | sort -n -r |more"
alias folders='du -h --max-depth=1'
alias folderssort='find . -maxdepth 1 -type d -print0 | xargs -0 du -sk | sort -rn'
alias tree='tree -CAhF --dirsfirst'
alias treed='tree -CAFd'
alias mountedinfo='df -hT'

# Copy file with a progress bar
cpp()
{
	set -e
	strace -q -ewrite cp -- "${1}" "${2}" 2>&1 \
	| awk '{
	count += $NF
	if (count % 10 == 0) {
		percent = count / total_size * 100
		printf "%3d%% [", percent
		for (i=0;i<=percent;i++)
			printf "="
			printf ">"
			for (i=percent;i<100;i++)
				printf " "
				printf "]\r"
			}
		}
	END { print "" }' total_size=$(stat -c '%s' "${1}") count=0
}


# Copy and go to the directory
cpg ()
{
	if [ -d "$2" ];then
		cp $1 $2 && cd $2
	else
		cp $1 $2
	fi
}

# Move and go to the directory
mvg ()
{
	if [ -d "$2" ];then
		mv $1 $2 && cd $2
	else
		mv $1 $2
	fi
}

# Create and go to the directory
mkdirg() {
  mkdir -p $1
  cd $1
}

# Goes up a specified number of directories  (i.e. up 4)
up() {
  local d=""
  limit=$1
  for ((i = 1; i <= limit; i++)); do
    d=$d/..
  done
  d=$(echo $d | sed 's/^\///')
  if [ -z "$d" ]; then
    d=..
  fi
  cd $d
}

# root privileges
alias doas="doas --"

#skim
alias sk="sk --ansi -c 'grep -rI --color=always --line-number "{}" .'"

#give the list of all installed desktops - xsessions desktops
alias xd="ls /usr/share/xsessions"

#check vulnerabilities microcode
alias microcode='grep . /sys/devices/system/cpu/vulnerabilities/*'

#remove
alias rmgitcache="rm -r ~/.cache/git"

#hardware info --short
alias hw="hwinfo --short"

#add new fonts
alias update-fc='sudo fc-cache -fv'

# Play audio files in current dir by type - If you have DeadBeef
alias playwav='deadbeef *.wav'
alias playogg='deadbeef *.ogg'
alias playmp3='deadbeef *.mp3'

# Play video files in current dir by type
alias playavi='mpv *.avi'
alias playmov='mpv *.mov'
alias playmp4='mpv *.mp4'
alias playmkv='mpv *.mkv'

# yt-dlp
# alias yta-aac="yt-dlp --extract-audio --audio-format aac "
alias yta-best="yt-dlp --extract-audio --audio-format best --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-flac="yt-dlp --extract-audio --audio-format flac --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-m4a="yt-dlp --extract-audio --audio-format m4a --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-mp3="yt-dlp --extract-audio --audio-format mp3 --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-opus="yt-dlp --extract-audio --audio-format opus --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-vorbis="yt-dlp --extract-audio --audio-format vorbis --output '%(title)s.%(ext)s' --no-keep-video "
alias yta-wav="yt-dlp --extract-audio --audio-format wav --output '%(title)s.%(ext)s' --no-keep-video "
alias ytv-best="yt-dlp -f bestvideo+bestaudio --output '%(title)s.%(ext)s' --no-keep-video "
alias ytv-best-mp4="yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' --merge-output-format mp4 --no-keep-video --embed-chapters --output '%(title)s.%(ext)s' "
alias yt-plMed="yt-dlp -f 'bestvideo[height<=720][ext=mp4]+bestaudio/best[height<=720][ext=m4a]' --merge-output-format mp4 --no-keep-video --embed-chapters --output '%(title)s.%(ext)s' "
alias yt-plHigh="yt-dlp -f 'bestvideo[height<=1080][ext=mp4]+bestaudio/best[height<=1080][ext=m4a]' --merge-output-format mp4 --no-keep-video --embed-chapters --output '%(title)s.%(ext)s' "

# switch between shells
# I do not recommend switching default SHELL from bash.
alias tobash="sudo chsh $USER -s /bin/bash && echo 'Now log out.'"
alias tozsh="sudo chsh $USER -s /bin/zsh && echo 'Now log out.'"
alias tofish="sudo chsh $USER -s /bin/fish && echo 'Now log out.'"

# termbin
alias tb="nc termbin.com 9999"

#free
alias free="free -mt"

#continue download
alias wget="wget -c"

#userlist
alias userlist="cut -d: -f1 /etc/passwd"

#search content with ripgrep
alias rg="rg --sort path"

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

### PATH
if [ -d "$HOME/.bin" ]; then
  PATH="$HOME/.bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ]; then
  PATH="$HOME/.local/bin:$PATH"
fi

if [ -d "$HOME/Applications" ]; then
  PATH="$HOME/Applications:$PATH"
fi

# Make nano the default editor

# export EDITOR='nano'
# export VISUAL='nano'

# Make neovim the default editor

export EDITOR='nvim'
export VISUAL='nvim'
export HISTCONTROL=ignoreboth:erasedups
export PAGER='most'

# Ignore case on auto-completion
# Note: bind used instead of sticking these in .inputrc
if [[ $iatest > 0 ]]; then bind "set completion-ignore-case on"; fi

# Disable the bell
if [[ $iatest > 0 ]]; then bind "set bell-style visible"; fi

# xdg runtime for apps (remember to create folder
#export XDG_RUNTIME_DIR=$PATH:~/.cache/xdgr

### EXPORT
#export TERM="xterm-256color"            # getting proper colors
#export HISTCONTROL=ignoredups:erasedups:ignorespace # no duplicate entries
# export ALTERNATE_EDITOR=""                        # setting for emacsclient
# export EDITOR="emacsclient -t -a ''"              # $EDITOR use Emacs in terminal
# export VISUAL="emacsclient -c -a emacs"           # $VISUAL use Emacs in GUI mode

### "bat" as manpager
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# without bat
# export MANPAGER="less -R --use-color -Dd+m -Du+b"

alias chmod='chmod -c --preserve-root'
alias chown='chown -c --preserve-root'

alias flushmem="doas sync; echo 3 > /proc/sys/vm/drop_caches"

# To see if a command is aliased, a file, or a built-in command
alias checkcommand="type -t"

# Show open ports
alias openports='netstat -nape --inet'

# Alias's for archives
alias mktar='tar -cvf'
alias mkbz2='tar -cvjf'
alias mkgz='tar -cvzf'
alias untar='tar -xvf'
alias unbz2='tar -xvjf'
alias ungz='tar -xvzf'


# Show all logs in /var/log
alias logs="sudo find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -v '[0-9]$' | xargs tail -f"


# alias chmod commands
alias mx='chmod a+x'
alias 000='chmod -R 000'
alias 644='chmod -R 644'
alias 666='chmod -R 666'
alias 755='chmod -R 755'
alias 777='chmod -R 777'

# Changing "ls" to "exa"
alias ls='exa -lha --color=always --group-directories-first' # my preferred listing
alias la='exa -a --color=always --group-directories-first'  # all files and dirs
alias ll='exa -l --color=always --group-directories-first'  # long format
alias lt='exa -aT --color=always --group-directories-first' # tree listing
alias lz='exa -lSrh --color=always --group-directories-first' # sort by size
alias l.='exa -a | egrep "^\."'

#Logo-ls
#alias ls='logo-ls -al --color=always --group-directories-first' # my preferred listing
#alias la='logo-ls -a --color=always --group-directories-first'  # all files and dirs
#alias ll='logo-ls -l --color=always --group-directories-first'  # long format
#alias lt='logo-ls -aT --color=always --group-directories-first' # tree listing
#alias l.='logo-ls -a | egrep "^\."'

# ColorLS

# list
# alias ls='ls --color=auto'
# alias la='ls -a'
# alias ll='ls -la'
# alias l='ls'
# alias l.="ls -A | egrep '^\.'"

#fix obvious typo's
alias cd..='cd ..'
alias pdw="pwd"
alias udpate='sudo pacman -Syyu'
alias upate='sudo pacman -Syyu'
alias updte='sudo pacman -Syyu'
alias updqte='sudo pacman -Syyu'
alias upqll="pikaur -Syu --noconfirm"
alias upal="pikaur -Syu --noconfirm"

#alias ls='ls --color=auto'
alias desligar="sudo shutdown -h now"
alias reiniciar="sudo reboot"
alias internetPCI="sudo lshw -class network -short"
alias sxorg="export DISPLAY=:0.0"

# Colorize grep output (good for log files)
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# confirm before overwriting something
alias cp="cp -i"
alias mv='mv -i'
alias rm='rm -iv'
alias mkdir='mkdir -pv'
alias cpa='advcp -g -i -v --update --recursive'
alias mva='advmv -g -i -v'

#cp without confirm overwrint something
alias cpay='yes | advcp -g -i -v --update --recursive'
alias mvay='yes | advmv -g -i -v'
alias cpy="yes | cp -rf"
alias mvy="yes | mv -rf"
alias rmy="yes | rm -rf"

#keyboard
alias give-me-abnt-br="sudo localectl set-x11-keymap br"
alias give-me-qwerty-us="sudo localectl set-x11-keymap us"

# adding flags
alias df='df -Th'    # human-readable sizes
alias free='free -m' # show sizes in MB
# alias lynx='lynx -cfg=~/.lynx/lynx.cfg -lss=~/.lynx/lynx.lss -vikeys'  # Vim broser
# alias vifm='./.config/vifm/scripts/vifmrun'
alias ncmpcpp='ncmpcpp ncmpcpp_directory=$HOME/.config/ncmpcpp/'
# alias mocp='mocp -M "$XDG_CONFIG_HOME"/moc -O MOCDir="$XDG_CONFIG_HOME"/moc' #lastfm

# ps
alias psa="ps auxf"
alias psgrep="ps aux | grep -v grep | grep -i -e VSZ -e"
alias psmem='ps auxf | sort -nr -k 4'
alias pscpu='ps auxf | sort -nr -k 3'

# get error messages from journalctl
alias jctl="journalctl -p 3 -xb"

# Merge Xresources
alias merge='xrdb -merge ~/.Xresources'

# Arp get all devices on lan
alias localdevicesET="sudo arp-scan --interface=eth0 --localnet"
alias localdevicesWI="sudo arp-scan --interface=wlan0 --localnet"

alias comused="history | awk '{print $2}' | sort | uniq -c | sort -nr | head -5"

#####       Nano        #####

#nano for important configuration files
#know what you do in these files
alias nlxdm="sudo nvim /etc/lxdm/lxdm.conf"
alias nlightdm="sudo nvim /etc/lightdm/lightdm.conf"
alias ngrub="sudo nvim /etc/default/grub"
alias nfstab="sudo nvim /etc/fstab"
alias nnsswitch="sudo nvim /etc/nsswitch.conf"
alias nsamba="sudo nvim /etc/samba/smb.conf"
alias nb="nvim ~/.bashrc"
alias nz="nvim ~/.zshrc"

#####              #####                ######

## Settings for umask
if ((EUID == 0)); then
  umask 002
else
  umask 022
fi

## get top 10 shell commands:
alias top10='print -l ${(o)history%% *} | uniq -c | sort -nr | head -n 10'

## Memory overview
memusage() {
  ps aux | awk '{if (NR > 1) print $5;
                  if (NR > 2) print "+"}
                  END { print "p" }' | dc
}

## Set a search path for the cd builtin
# cdpath=(.. ~)

# alias to show the date
alias da='date "+%Y-%m-%d %A %T %Z"'

# Count all files (recursively) in the current folder
alias countfiles="for t in files links directories; do echo \`find . -type \${t:0:1} | wc -l\` \$t; done 2> /dev/null"

# editar bashrc
alias ebrc='vim ~/.bashrc'

# Remove a directory and all files
alias rmd='/bin/rm  --recursive --force --verbose '

## Use a default width of 80 for manpages for more convenient reading
export MANWIDTH=${MANWIDTH:-80}

# avoid super long lines when reading man pages by limiting the line length to 120, but using less if the terminal width is smaller
alias man='MANWIDTH=$((COLUMNS > 120 ? 120 : COLUMNS)) man -P "less $LESS"'

# Default parameter to send to the "less" command
# -R: show ANSI colors correctly; -i: case insensitive search
LESS="-R -i"

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
  . /etc/bash_completion
fi

# enable bash completion in interactive shells
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Show auto-completion list automatically, without double tab
if [[ $iatest > 0 ]]; then bind 'set show-all-if-ambiguous on'; fi
bind 'TAB:menu-complete'

# Add sbin directories to PATH.  This is useful on systems that have sudo
echo $PATH | grep -Eq "(^|:)/sbin(:|)" || PATH=$PATH:/sbin
echo $PATH | grep -Eq "(^|:)/usr/sbin(:|)" || PATH=$PATH:/usr/sbin

### CHANGE TITLE OF TERMINALS
case ${TERM} in
xterm* | rxvt* | Eterm* | aterm | kitty | kterm | gnome* | alacritty | st | konsole*)
  PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\007"'
  ;;
screen*)
  PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\033\\"'
  ;;
esac

PROMPT_COMMAND='history -a'

### SHOPT
shopt -s autocd  # change to named directory
shopt -s cdspell # autocorrects cd misspellings
shopt -s cmdhist # save multi-line commands in history as single line
shopt -s dotglob
shopt -s histappend     # do not overwrite history
shopt -s expand_aliases # expand aliases
shopt -s checkwinsize   # checks term size when bash regains control

### PROMPT
# This is commented out if using starship prompt
PS1='[\u@\h \W]\$ '

. /home/$USER/.asdf/asdf.sh
. /home/$USER/.asdf/completions/asdf.bash
#export PATH="$HOME/scripts/fontpreview:$PATH"

# If not running interactively, don't do anything
case $- in
*i*) ;;
*) return ;;
esac

alias top='htop'
alias cat='bat --pager=never --theme=ansi'
alias catf='bat --theme=ansi'

### ARCHIVE EXTRACTION
# usage: ex <file>
ex() {
  if [ -f "$1" ]; then
    case $1 in
    *.tar.bz2) tar xjf $1 ;;
    *.tar.gz) tar xzf $1 ;;
    *.bz2) bunzip2 $1 ;;
    *.rar) unrar x $1 ;;
    *.gz) gunzip $1 ;;
    *.tar) tar xf $1 ;;
    *.tbz2) tar xjf $1 ;;
    *.tgz) tar xzf $1 ;;
    *.zip) unzip $1 ;;
    *.Z) uncompress $1 ;;
    *.7z) 7z x $1 ;;
    *.deb) ar x $1 ;;
    *.tar.xz) tar xf $1 ;;
    *.tar.zst) unzstd $1 ;;
    *) echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Returns the last 2 fields of the working directory
pwdtail ()
{
	pwd|awk -F/ '{nlast = NF -1;print $nlast"/"$NF}'
}

# Show the current distribution
distribution ()
{
	local dtype
	# Assume unknown
	dtype="unknown"
	
	# First test against Fedora / RHEL / CentOS / generic Redhat derivative
	if [ -r /etc/rc.d/init.d/functions ]; then
		source /etc/rc.d/init.d/functions
		[ zz`type -t passed 2>/dev/null` == "zzfunction" ] && dtype="redhat"
	
	# Then test against SUSE (must be after Redhat,
	# I've seen rc.status on Ubuntu I think? TODO: Recheck that)
	elif [ -r /etc/rc.status ]; then
		source /etc/rc.status
		[ zz`type -t rc_reset 2>/dev/null` == "zzfunction" ] && dtype="suse"
	
	# Then test against Debian, Ubuntu and friends
	elif [ -r /lib/lsb/init-functions ]; then
		source /lib/lsb/init-functions
		[ zz`type -t log_begin_msg 2>/dev/null` == "zzfunction" ] && dtype="debian"
	
	# Then test against Gentoo
	elif [ -r /etc/init.d/functions.sh ]; then
		source /etc/init.d/functions.sh
		[ zz`type -t ebegin 2>/dev/null` == "zzfunction" ] && dtype="gentoo"
	
	# For Mandriva we currently just test if /etc/mandriva-release exists
	# and isn't empty (TODO: Find a better way :)
	elif [ -s /etc/mandriva-release ]; then
		dtype="mandriva"

	# For Slackware we currently just test if /etc/slackware-version exists
	elif [ -s /etc/slackware-version ]; then
		dtype="slackware"

	fi
	echo $dtype
}

### ALIASES ###

# Searches for text in all files in the current folder
ftext ()
{
	# -i case-insensitive
	# -I ignore binary files
	# -H causes filename to be printed
	# -r recursive search
	# -n causes line number to be printed
	# optional: -F treat search term as a literal, not a regular expression
	# optional: -l only print filenames and not the matching lines ex. grep -irl "$1" *
	grep -iIHrn --color=always "$1" . | less -r
}


# root privileges
alias doas="doas --"

# navigation
up() {
  local d=""
  local limit="$1"

  # Default to limit of 1
  if [ -z "$limit" ] || [ "$limit" -le 0 ]; then
    limit=1
  fi

  for ((i = 1; i <= limit; i++)); do
    d="../$d"
  done

  # perform cd. Show error if cd fails
  if ! cd "$d"; then
    echo "Couldn't go up $limit dirs."
  fi
}

# vim and emacs
alias vim="nvim"
# alias em="/usr/bin/emacs -nw"
# alias emacs="emacsclient -c -a 'emacs'"
# alias doomsync="~/.emacs.d/bin/doom sync"
# alias doomdoctor="~/.emacs.d/bin/doom doctor"
# alias doomupgrade="~/.emacs.d/bin/doom upgrade"
# alias doompurge="~/.emacs.d/bin/doom purge"

# git
alias addup='git add -u'
alias addall='git add .'
alias branch='git branch'
alias checkout='git checkout'
alias clone='git clone'
alias commit='git commit -m'
alias fetch='git fetch'
alias pull='git pull origin'
alias push='git push origin'
alias stat='git status' # 'status' is protected name so using 'stat' instead
alias tag='git tag'
alias newtag='git tag -a'

### RANDOM COLOR SCRIPT ###
# Get this script from my GitLab: gitlab.com/dwt1/shell-color-scripts
# Or install it from the Arch User Repository: shell-color-scripts
colorscript random

### BASH INSULTER (works in zsh though) ###
if [ -f /etc/bash.command-not-found ]; then
  . /etc/bash.command-not-found
fi

### SETTING THE STARSHIP PROMPT ###
eval "$(starship init bash)"

