#!/bin/bash
# .bashrc

# Initialize `~/.bashrc.d`
if [ -d ${HOME}/.bashrc.d ]; then
  for file in ~/.bashrc.d/*.bashrc; do
    source "${file}"
  done
fi

#┌───────┐
#│.bashrc│
#└───────┘
# ~/.bashrc
#
#alsi -c1=red -c2=blue -t red
#command cowsay -f tux $(fortune all)
#cat /etc/motd
echo "Hello $USER."
echo "Today is $(date +'%a %e %b : %G : %T %p')"
echo "Current working directory : $(pwd)"

#NFS
# alias volume2="sudo mount -t nfs 192.168.1.207:/mnt/HD/HD_a2 /home/$USER/Videos/Volume2 -o nolock"
# alias volume1="sudo mount -t nfs 192.168.1.207:/mnt/HD/HD_b2 /home/$USER/Videos/Volume1 -o nolock"
# alias sharecenter="volume1 && volume2"

# Make playlist for mpv
alias playlistmaker="find ./ -type f | sort > playlist.m3u"

#Mirrors

alias dietpi="ssh dietpi@192.168.1.200"
alias dietroot="ssh root@192.168.1.200"

alias btrfm="findmnt -t btrfs -o TARGET,SOURCE"

# gpg encryption
# verify signature for isos
alias gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
# receive the key of a developer
alias gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"

#pacman unlock
# alias unlock="sudo rm /var/lib/pacman/db.lck"
# alias rmpacmanlock="sudo rm /var/lib/pacman/db.lck"

# Aliases for software managment
alias rankmirrors='sudo netselect-apt -c Brazil -t 15 -a amd64 -n testing'
alias update='sudo apt update'
alias upgrade='sudo apt upgrade -y'
alias install='sudo apt install -y'
alias info='sudo apt-cache info'

#Recent Installed Packages
alias rip='comm -12 <(apt-mark showmanual | sort) <(grep " install " /var/log/dpkg.log | cut -d " " -sf4 | grep -o "^[^:]*" | sort)'
alias ripver='dpkg --get-selections | awk '/php/{print $1}' | xargs dpkg-query --show $1'
alias rip2='zcat -f /var/log/dpkg.log* | grep " install " | sort > /tmp/dpkg.log
grep -F "`comm -12 <(apt-mark showmanual | sort) <(cat /tmp/dpkg.log | cut -d " " -sf4 | grep -o "^[^:]*" | sort)`" /tmp/dpkg.log | grep \<none\>'

#Cleanup orphaned packages
alias cleanup='yes | sudo apt autoclean && sudo apt autoremove'

#gpg
#verify signature for isos
alias gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
alias fix-gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
#receive the key of a developer
alias gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"
alias fix-gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"
alias fix-keyserver="[ -d ~/.gnupg ] || mkdir ~/.gnupg ; cp /etc/pacman.d/gnupg/gpg.conf ~/.gnupg/ ; echo 'done'"

#hblock (stop tracking with hblock)
#use unhblock to stop using hblock
alias unhblock="hblock -S none -D none"

#Others
alias tarnow='tar -acf'
alias untar='tar -zxvf'
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias cat='bat --pager=never --theme=ansi'
alias catf='bat --theme=ansi'

#clear
alias clean="clear; seq 1 $(tput cols) | sort -R | sparklines | lolcat"

#fixes
# alias fix-permissions="sudo chown -R $USER:$USER ~/.config ~/.local"

#systeminfo
alias probe="sudo -E hw-probe -all -upload"
alias sysfailed="systemctl list-units --failed"

#maintenance
alias big="expac -H M '%m\t%n' | sort -h | nl"
alias downgrada="sudo downgrade --ala-url https://ant.seedhost.eu/arcolinux/"

#btrfs aliases
alias btrfsfs="sudo btrfs filesystem df /"
alias btrfsli="sudo btrfs su li / -t"

####################################################################################

#systeminfo (Systemd)
# alias probe="sudo -E hw-probe -all -upload"
alias sysfailed="systemctl list-units --failed"

#grub update
alias update-grub="sudo grub-mkconfig -o /boot/grub/grub.cfg"

# Search command line history
alias h="history | grep "

#know what you do in these files
alias nlxdm="sudo $EDITOR /etc/lxdm/lxdm.conf"
alias nlightdm="sudo $EDITOR /etc/lightdm/lightdm.conf"
alias ngrub="sudo $EDITOR /etc/default/grub"
alias nmirrorlist="sudo $EDITOR /etc/pacman.d/mirrorlist"
alias nsddm="sudo $EDITOR /etc/sddm.conf"
alias nsddmk="sudo $EDITOR /etc/sddm.conf.d/kde_settings.conf"
alias nfstab="sudo $EDITOR /etc/fstab"
alias nnsswitch="sudo $EDITOR /etc/nsswitch.conf"
alias nsamba="sudo $EDITOR /etc/samba/smb.conf"
alias nhosts="sudo $EDITOR /etc/hosts"
alias nb="$EDITOR ~/.bashrc"
alias nz="$EDITOR ~/.zshrc"
alias nf="$EDITOR ~/.config/fish/config.fish"

# Alias's to show disk space and space used in a folder
alias diskspace="du -S | sort -n -r |more"
alias folders='du -h --max-depth=1'
alias folderssort='find . -maxdepth 1 -type d -print0 | xargs -0 du -sk | sort -rn'
alias tree='tree -CAhF --dirsfirst'
alias treed='tree -CAFd'
alias mountedinfo='df -hT'

# Alias's for archives
alias mktar='tar -cvf'
alias mkbz2='tar -cvjf'
alias mkgz='tar -cvzf'

# Copy file with a progress bar
cpp() {
  set -e
  strace -q -ewrite cp -- "${1}" "${2}" \
  2>&1
  awk '{
	count += $NF
	if (count % 10 == 0) {
		percent = count / total_size * 100
		printf "%3d%% [", percent
		for (i=0;i<=percent;i++)
			printf "="
			printf ">"
			for (i=percent;i<100;i++)
				printf " "
				printf "]\r"
			}
		}
	END { print "" }' total_size="$(stat -c '%s' "${1}")" count=0
}

# Copy and go to the directory
cpg() {
  if [ -d "$2" ]; then
    cp $1 $2 && cd $2
  else
    cp $1 $2
  fi
}

# Move and go to the directory
mvg() {
  if [ -d "$2" ]; then
    mv $1 $2 && cd $2
  else
    mv $1 $2
  fi
}

# Create and go to the directory
mkdirg() {
  mkdir -p $1
  cd $1
}

# Goes up a specified number of directories  (i.e. up 4)
up() {
  local d=""
  limit=$1
  for ((i = 1; i <= limit; i++)); do
    d=$d/..
  done
  d=$(echo $d | sed 's/^\///')
  if [ -z "$d" ]; then
    d=..
  fi
  cd $d
}

# kill commands
# quickly kill conkies
# alias kc='killall conky'
# quickly kill polybar
# alias kp='killall polybar'

#update betterlockscreen images
# alias bls="betterlockscreen -u /usr/share/backgrounds/arcolinux/"

# Configure completion for sudo
# -c : Complete arguments as if they were commands
#     (eg: `sudo emer<tab>` -> `sudo emerge`)
#     (eg: `sudo dd status=p<tab>` -> `sudo dd status=progress`)
# -f : Complete arguments as if they were directory names (default behaviour)
#     (eg: `sudo /bi<tab>` -> `sudo /bin/`)
# complete -cf sudo

# root privileges
# alias sudo="sudo --"

#skim
alias sk="sk --ansi -c 'grep -rI --color=always --line-number "{}" .'"

#give the list of all installed desktops - xsessions desktops
alias xd="ls /usr/share/xsessions"

#check vulnerabilities microcode
alias microcode='grep . /sys/devices/system/cpu/vulnerabilities/*'

#remove
alias rmgitcache="rm -r ~/.cache/git"

#hardware info --short
alias hw="hwinfo --short"

#add new fonts
alias update-fc='sudo fc-cache -fv'

# Play audio files in current dir by type - If you have DeadBeef
alias playwav='deadbeef *.wav'
alias playogg='deadbeef *.ogg'
alias playmp3='deadbeef *.mp3'

# Play video files in current dir by type
alias playavi='mpv *.avi'
alias playmov='mpv *.mov'
alias playmp4='mpv *.mp4'
alias playmkv='mpv *.mkv'

# yt-dlp
# alias yta-aac="yt-dlp --extract-audio --audio-format aac "
alias yta-best="yt-dlp --extract-audio --audio-format best "
alias yta-flac="yt-dlp --extract-audio --audio-format flac "
alias yta-m4a="yt-dlp --extract-audio --audio-format m4a "
alias yta-mp3="yt-dlp --extract-audio --audio-format mp3 "
alias yta-opus="yt-dlp --extract-audio --audio-format opus "
alias yta-vorbis="yt-dlp --extract-audio --audio-format vorbis "
alias yta-wav="yt-dlp --extract-audio --audio-format wav "
alias ytv-best="yt-dlp -f bestvideo+bestaudio "
alias ytv-best-mp4="yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' --merge-output-format mp4 "

# switch between shells
# I do not recommend switching default SHELL from bash.
alias tobash="sudo chsh $USER -s /bin/bash && echo 'Now log out.'"
alias tozsh="sudo chsh $USER -s /bin/zsh && echo 'Now log out.'"
alias tofish="sudo chsh $USER -s /bin/fish && echo 'Now log out.'"

# termbin
alias tb="nc termbin.com 9999"

#free
alias free="free -mt"

#continue download
alias wget="wget -c"

#userlist
alias userlist="cut -d: -f1 /etc/passwd"

#search content with ripgrep
alias rg="rg --sort path"

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

### PATH
if [ -d "$HOME/.bin" ]; then
  PATH="$HOME/.bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ]; then
  PATH="$HOME/.local/bin:$PATH"
fi

if [ -d "$HOME/Applications" ]; then
  PATH="$HOME/Applications:$PATH"
fi

# Make nano the default editor

# export EDITOR='nano'
# export VISUAL='nano'

# Make neovim the default editor

export EDITOR='nvim'
export VISUAL='nvim'
export HISTCONTROL=ignoreboth:erasedups
export PAGER='most'

# Ignore case on auto-completion
# Note: bind used instead of sticking these in .inputrc
if [[ $iatest > 0 ]]; then bind "set completion-ignore-case on"; fi

# Disable the bell
if [[ $iatest > 0 ]]; then bind "set bell-style visible"; fi

# xdg runtime for apps (remember to create folder
export XDG_RUNTIME_DIR=$PATH:~/.cache/xdgr

### EXPORT
export TERM="xterm-256color"                        # getting proper colors
export HISTCONTROL=ignoredups:erasedups:ignorespace # no duplicate entries
# export ALTERNATE_EDITOR=""                        # setting for emacsclient
# export EDITOR="emacsclient -t -a ''"              # $EDITOR use Emacs in terminal
# export VISUAL="emacsclient -c -a emacs"           # $VISUAL use Emacs in GUI mode

### "bat" as manpager
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# Changing "ls" to "exa"
alias ls='exa -al --color=always --group-directories-first' # my preferred listing
alias la='exa -a --color=always --group-directories-first'  # all files and dirs
alias ll='exa -l --color=always --group-directories-first'  # long format
alias lt='exa -aT --color=always --group-directories-first' # tree listing
alias l.='exa -a | egrep "^\."'

#Logo-ls
#alias ls='logo-ls -al --color=always --group-directories-first' # my preferred listing
#alias la='logo-ls -a --color=always --group-directories-first'  # all files and dirs
#alias ll='logo-ls -l --color=always --group-directories-first'  # long format
#alias lt='logo-ls -aT --color=always --group-directories-first' # tree listing
#alias l.='logo-ls -a | egrep "^\."'

# list
# alias ls='ls --color=auto'
# alias la='ls -a'
# alias ll='ls -la'
# alias l='ls'
# alias l.="ls -A | egrep '^\.'"

#fix obvious typo's
alias cd..='cd ..'
alias pdw="pwd"
alias udpate='sudo pacman -Syyu'
alias upate='sudo pacman -Syyu'
alias updte='sudo pacman -Syyu'
alias updqte='sudo pacman -Syyu'
alias upqll="paru -Syu --noconfirm"
alias upal="paru -Syu --noconfirm"

#alias ls='ls --color=auto'
alias desligar="sudo shutdown -h now"
alias reiniciar="sudo reboot"
alias internetPCI="sudo lshw -class network -short"
alias limpar="sudo vpm cleanup && sudo vpm autoremove"
alias atualizar="sudo vpm sync && sudo vpm upgrade"
alias sxorg="export DISPLAY=:0.0"

# Colorize grep output (good for log files)
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# confirm before overwriting something
alias cp="cp -i"
alias mv='mv -i'
alias rm='rm -i'

#cp without confirm overwrint something
alias cpy="yes | cp -rf"
alias mvy="yes | mv -rf"
alias rmy="yes | rm -rf"

#keyboard
alias give-me-abnt-br="sudo localectl set-x11-keymap br"
alias give-me-qwerty-us="sudo localectl set-x11-keymap us"

# adding flags
alias df='df -Th'    # human-readable sizes
alias free='free -m' # show sizes in MB
# alias lynx='lynx -cfg=~/.lynx/lynx.cfg -lss=~/.lynx/lynx.lss -vikeys'  # Vim broser
# alias vifm='./.config/vifm/scripts/vifmrun'
alias ncmpcpp='ncmpcpp ncmpcpp_directory=$HOME/.config/ncmpcpp/'
# alias mocp='mocp -M "$XDG_CONFIG_HOME"/moc -O MOCDir="$XDG_CONFIG_HOME"/moc' #lastfm

# ps
alias psa="ps auxf"
alias psgrep="ps aux | grep -v grep | grep -i -e VSZ -e"
alias psmem='ps auxf | sort -nr -k 4'
alias pscpu='ps auxf | sort -nr -k 3'

# get error messages from journalctl
alias jctl="journalctl -p 3 -xb"

# Merge Xresources
alias merge='xrdb -merge ~/.Xresources'

# Arp get all devices on lan
alias localdevices="sudo arp-scan --interface=eth0 --localnet"

alias comused="history | awk '{print $2}' | sort | uniq -c | sort -nr | head -5"

#####       Nano        #####

#nano for important configuration files
#know what you do in these files
alias nlxdm="sudo nvim /etc/lxdm/lxdm.conf"
alias nlightdm="sudo nvim /etc/lightdm/lightdm.conf"
alias npacman="sudo nvim /etc/pacman.conf"
alias ngrub="sudo nvim /etc/default/grub"
# alias nconfgrub="sudo nvim /boot/grub/grub.cfg"
alias nmkinitcpio="sudo nvim /etc/mkinitcpio.conf"
alias nmirrorlist="sudo nvim /etc/pacman.d/mirrorlist"
# alias narcomirrorlist='sudo nano /etc/pacman.d/arcolinux-mirrorlist'
alias nsddm="sudo nvim /etc/sddm.conf"
alias nsddmk="sudo nvim /etc/sddm.conf.d/kde_settings.conf"
alias nfstab="sudo nvim /etc/fstab"
alias nnsswitch="sudo nvim /etc/nsswitch.conf"
alias nsamba="sudo nvim /etc/samba/smb.conf"
alias ngnupgconf="sudo nano /etc/pacman.d/gnupg/gpg.conf"
alias nb="nvim ~/.bashrc"
alias nz="nvim ~/.zshrc"

#####              #####                ######

## Settings for umask
if ((EUID == 0)); then
  umask 002
else
  umask 022
fi

## global aliases (for those who like them) ##

# alias -g '...'='../..'
# alias -g '....'='../../..'
#alias -g BG='& exit'
#alias -g C='|wc -l'
#alias -g G='|grep'
#alias -g H='|head'
#alias -g Hl=' --help |& less -r'
#alias -g K='|keep'
#alias -g L='|less'
#alias -g LL='|& less -r'
#alias -g M='|most'
#alias -g N='&>/dev/null'
#alias -g R='| tr A-z N-za-m'
#alias -g SL='| sort | less'
#alias -g S='| sort'
#alias -g T='|tail'
#alias -g V='| vim -'

## get top 10 shell commands:
alias top10='print -l ${(o)history%% *} | uniq -c | sort -nr | head -n 10'

## Memory overview
memusage() {
  ps aux | awk '{if (NR > 1) print $5;
                  if (NR > 2) print "+"}
                  END { print "p" }' | dc
}

## Set a search path for the cd builtin
# cdpath=(.. ~)

# alias to show the date
alias da='date "+%Y-%m-%d %A %T %Z"'

# Count all files (recursively) in the current folder
alias countfiles="for t in files links directories; do echo \`find . -type \${t:0:1} | wc -l\` \$t; done 2> /dev/null"

# editar bashrc
alias ebrc='vim ~/.bashrc'

# Remove a directory and all files
alias rmd='/bin/rm  --recursive --force --verbose '

## Use a default width of 80 for manpages for more convenient reading
export MANWIDTH=${MANWIDTH:-80}

### "vim" as manpager
# export MANPAGER='/bin/bash -c "vim -MRn -c \"set buftype=nofile showtabline=0 ft=man ts=8 nomod nolist norelativenumber nonu noma\" -c \"normal L\" -c \"nmap q :qa<CR>\"</dev/tty <(col -b)"'

### "nvim" as manpager
# export MANPAGER="nvim -c 'set ft=man' -"

### SET VI MODE ###
# Comment this line out to enable default emacs-like bindings
# set -o vi
# bind -m vi-command 'Control-l: clear-screen'
# bind -m vi-insert 'Control-l: clear-screen'

# set variable identifying the chroot you work in (used in the prompt below)
# if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
#     debian_chroot=$(cat /etc/debian_chroot)
# fi

# set a fancy prompt (non-color, unless we know we "want" color)
# case "$TERM" in
#   xterm-color) color_prompt=yes;;
# esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
# force_color_prompt=yes

# if [ -n "$force_color_prompt" ]; then
#     if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
#         # We have color support; assume it's compliant with Ecma-48
#         # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
#         # a case would tend to support setf rather than setaf.)
#         color_prompt=yes
#     else
#         color_prompt=
#     fi
# fi

# if [ "$color_prompt" = yes ]; then
#     PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
# else
#     PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
# fi
# unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir

# case "$TERM" in
# xterm*|rxvt*)
#     PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
#     ;;
# *)
#     ;;
# esac

# red='\[\e[0;31m\]'
# RED='\[\e[1;31m\]'
# blue='\[\e[0;34m\]'
# BLUE='\[\e[1;34m\]'
# cyan='\[\e[0;36m\]'
# CYAN='\[\e[1;36m\]'
# green='\[\e[0;32m\]'
# GREEN='\[\e[1;32m\]'
# yellow='\[\e[0;33m\]'
# YELLOW='\[\e[1;33m\]'
# PURPLE='\[\e[1;35m\]'
# purple='\[\e[0;35m\]'
# nc='\[\e[0m\]'

# if [ "$UID" = 0 ]; then
#     PS1="$red\u$nc@$red\H$nc:$CYAN\w$nc\\n$red#$nc "
# else
#     PS1="$PURPLE\u$nc@$CYAN\H$nc:$GREEN\w$nc\\n$GREEN\$$nc "
# fi

# Default parameter to send to the "less" command
# -R: show ANSI colors correctly; -i: case insensitive search
LESS="-R -i"

# source /etc/profile

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
  . /etc/bash_completion
fi

# enable bash completion in interactive shells
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Show auto-completion list automatically, without double tab
if [[ $iatest > 0 ]]; then bind 'set show-all-if-ambiguous on'; fi
bind 'TAB:menu-complete'

# Add sbin directories to PATH.  This is useful on systems that have sudo
echo $PATH | grep -Eq "(^|:)/sbin(:|)" || PATH=$PATH:/sbin
echo $PATH | grep -Eq "(^|:)/usr/sbin(:|)" || PATH=$PATH:/usr/sbin

### CHANGE TITLE OF TERMINALS
case ${TERM} in
xterm* | rxvt* | Eterm* | aterm | kitty | kterm | gnome* | alacritty | st | konsole*)
  PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\007"'
  ;;
screen*)
  PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\033\\"'
  ;;
esac

PROMPT_COMMAND='history -a'

### SHOPT
shopt -s autocd  # change to named directory
shopt -s cdspell # autocorrects cd misspellings
shopt -s cmdhist # save multi-line commands in history as single line
shopt -s dotglob
shopt -s histappend     # do not overwrite history
shopt -s expand_aliases # expand aliases
shopt -s checkwinsize   # checks term size when bash regains control

### PROMPT
# This is commented out if using starship prompt
PS1='[\u@\h \W]\$ '

. /home/$USER/.asdf/asdf.sh
. /home/$USER/.asdf/completions/asdf.bash
export PATH="$HOME/scripts/fontpreview:$PATH"

# If not running interactively, don't do anything
case $- in
*i*) ;;
*) return ;;
esac

alias top='htop'
alias cat='bat --pager=never --theme=ansi'
alias catf='bat --theme=ansi'
### ARCHIVE EXTRACTION
# usage: ex <file>
ex() {
  if [ -f "$1" ]; then
    case $1 in
    *.tar.bz2) tar xjf $1 ;;
    *.tar.gz) tar xzf $1 ;;
    *.bz2) bunzip2 $1 ;;
    *.rar) unrar x $1 ;;
    *.gz) gunzip $1 ;;
    *.tar) tar xf $1 ;;
    *.tbz2) tar xjf $1 ;;
    *.tgz) tar xzf $1 ;;
    *.zip) unzip $1 ;;
    *.Z) uncompress $1 ;;
    *.7z) 7z x $1 ;;
    *.deb) ar x $1 ;;
    *.tar.xz) tar xf $1 ;;
    *.tar.zst) unzstd $1 ;;
    *) echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

### ALIASES ###

# root privileges
# alias sudo="sudo --"

# navigation
up() {
  local d=""
  local limit="$1"

  # Default to limit of 1
  if [ -z "$limit" ] || [ "$limit" -le 0 ]; then
    limit=1
  fi

  for ((i = 1; i <= limit; i++)); do
    d="../$d"
  done

  # perform cd. Show error if cd fails
  if ! cd "$d"; then
    echo "Couldn't go up $limit dirs."
  fi
}

# vim and emacs
alias vim="nvim"
# alias em="/usr/bin/emacs -nw"
# alias emacs="emacsclient -c -a 'emacs'"
# alias doomsync="~/.emacs.d/bin/doom sync"
# alias doomdoctor="~/.emacs.d/bin/doom doctor"
# alias doomupgrade="~/.emacs.d/bin/doom upgrade"
# alias doompurge="~/.emacs.d/bin/doom purge"

# git
alias addup='git add -u'
alias addall='git add .'
alias branch='git branch'
alias checkout='git checkout'
alias clone='git clone'
alias commit='git commit -m'
alias fetch='git fetch'
alias pull='git pull origin'
alias push='git push origin'
alias stat='git status' # 'status' is protected name so using 'stat' instead
alias tag='git tag'
alias newtag='git tag -a'

##### Xdeb Configs (VoidLinux) ####

export XDEB_OPT_DEPS=true
export XDEB_OPT_SYNC=true
export XDEB_OPT_WARN_CONFLICT=true
export XDEB_OPT_FIX_CONFLICT=true

### RANDOM COLOR SCRIPT ###
# Get this script from my GitLab: gitlab.com/dwt1/shell-color-scripts
# Or install it from the Arch User Repository: shell-color-scripts
colorscript random

### BASH INSULTER (works in zsh though) ###
if [ -f /etc/bash.command-not-found ]; then
  . /etc/bash.command-not-found
fi

### SETTING THE STARSHIP PROMPT ###
eval "$(starship init bash)"

# xrandr
# LVDS-1  1920x1200

PATH="/home/junior/perl5/bin${PATH:+:${PATH}}"
export PATH
PERL5LIB="/home/junior/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
export PERL5LIB
PERL_LOCAL_LIB_ROOT="/home/junior/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
export PERL_LOCAL_LIB_ROOT
PERL_MB_OPT="--install_base \"/home/junior/perl5\""
export PERL_MB_OPT
PERL_MM_OPT="INSTALL_BASE=/home/junior/perl5"
export PERL_MM_OPT
